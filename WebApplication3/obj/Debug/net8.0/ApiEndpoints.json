[
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "GetAllAccounts",
    "RelativePath": "api/Account",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Account.GetAllAccountRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "ChangePass",
    "RelativePath": "api/Account/change_pass",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Account.UpdatePasswordRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "ChangeForgetPass",
    "RelativePath": "api/Account/changeForgetPass",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Account.EnterPassRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "Delete",
    "RelativePath": "api/Account/delete_acc",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "EnterOtp",
    "RelativePath": "api/Account/enter_otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Otp.otpRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "ForgotPass",
    "RelativePath": "api/Account/forgot",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgetPass",
        "Type": "WebApplication3.DTOs.Account.ForgetPassDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "GetAllAccounts",
    "RelativePath": "api/Account/get_all_accounts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Account.GetAllAccountRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "GetAccount",
    "RelativePath": "api/Account/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.account",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "Logout",
    "RelativePath": "api/Account/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "ResendOtp",
    "RelativePath": "api/Account/re_send_otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Account.ForgetPassDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "updateRole",
    "RelativePath": "api/Account/update_role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AccountController",
    "Method": "GetAccountByUsername",
    "RelativePath": "api/Account/Username",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.account",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.AuthController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/Auth/ConfirmEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Auth.confirmEmailRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AuthController",
    "Method": "LoginAsync",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "WebApplication3.DTOs.Auth.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.account",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AuthController",
    "Method": "RefreshToken",
    "RelativePath": "api/Auth/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.AuthController",
    "Method": "Create",
    "RelativePath": "api/Auth/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "acc",
        "Type": "WebApplication3.DTOs.Auth.CreateAccountRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "AddBlog",
    "RelativePath": "api/Blog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createBlog",
        "Type": "WebApplication3.DTOs.Blog.CreateRequestBLogDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "GetAllBlog",
    "RelativePath": "api/Blog/all_blog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Blog.GetAllBlogRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "GetAllBlogApprove",
    "RelativePath": "api/Blog/all_blog_approve",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "GetAllBlogById",
    "RelativePath": "api/Blog/all_blog_by_id",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Blog.GetAllAccountByIdRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "Delete",
    "RelativePath": "api/Blog/delete_blog",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "GetBlog",
    "RelativePath": "api/Blog/get_blog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "GetBlogById",
    "RelativePath": "api/Blog/get_blog_by_id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "UpdateBlog",
    "RelativePath": "api/Blog/update_blog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Blog.updateBlogRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.BlogController",
    "Method": "UpdateStatus",
    "RelativePath": "api/Blog/update_status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Blog.updateApprovedRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.CloudController",
    "Method": "Delete",
    "RelativePath": "api/Cloud/delete",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Public_id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.CloudController",
    "Method": "GetImageDetail",
    "RelativePath": "api/Cloud/GetDetail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PublicId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.DTOs.ImageDto.ImageDtos",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.CloudController",
    "Method": "UpImageProject",
    "RelativePath": "api/Cloud/UpImageProject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.ImageDto.CreateProjectImageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.CloudController",
    "Method": "UpLoadMultipleImage",
    "RelativePath": "api/Cloud/uploadMulti",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "imageUploadModels",
        "Type": "System.Collections.Generic.List\u00601[[WebApplication3.Helper.imageUpload, WebApplication3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.CloudController",
    "Method": "UpLoadSingleImage",
    "RelativePath": "api/Cloud/uploadsingle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FileName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.CloudController",
    "Method": "UpLoadTinySingleImage",
    "RelativePath": "api/Cloud/uploadTinySingle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FileName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.GroupController",
    "Method": "GetAllGroups",
    "RelativePath": "api/Group",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[WebApplication3.Entities.Group, WebApplication3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.GroupController",
    "Method": "AddGroup",
    "RelativePath": "api/Group",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "create",
        "Type": "WebApplication3.DTOs.Groups.GroupsDTOs",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.GroupController",
    "Method": "DeleteGroup",
    "RelativePath": "api/Group",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.GroupController",
    "Method": "GetGroup",
    "RelativePath": "api/Group/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.sponsor",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "Create",
    "RelativePath": "api/Member",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "mem",
        "Type": "WebApplication3.DTOs.Member.CreateRequestMemberDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "Delete",
    "RelativePath": "api/Member/{name}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "EnterOtp",
    "RelativePath": "api/Member/enter_otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Member.EnterOtpMemberRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "GetAllMember",
    "RelativePath": "api/Member/get_all_member",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Member.GetlAllMemberRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[WebApplication3.DTOs.Member.MemberDTO, WebApplication3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "JoinProject",
    "RelativePath": "api/Member/JoinProject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Project.JoinProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "GetMember",
    "RelativePath": "api/Member/name",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.Member",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "ResendOtp",
    "RelativePath": "api/Member/re_send_otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Account.ForgetPassDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MemberController",
    "Method": "UpdateMember",
    "RelativePath": "api/Member/update_member",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "up",
        "Type": "WebApplication3.DTOs.Member.UpdateRequestMember",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MomoController",
    "Method": "CreatePaymentUrl",
    "RelativePath": "api/Momo/momo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "WebApplication3.DTOs.Momo.OrderInfoModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.MomoController",
    "Method": "PaymentCallBack",
    "RelativePath": "api/Momo/test",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "UpdateProject",
    "RelativePath": "api/Project",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "up",
        "Type": "WebApplication3.DTOs.Project.UpdateProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "Delete",
    "RelativePath": "api/Project/{name}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "AddProject",
    "RelativePath": "api/Project/add_project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createProject",
        "Type": "WebApplication3.DTOs.Project.CreateProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetAllProject",
    "RelativePath": "api/Project/get_all_project",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetAllProjectAprove",
    "RelativePath": "api/Project/get_all_project_aprove",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetAllProjectInDate",
    "RelativePath": "api/Project/get_all_project_in_date",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetAllProjectOutDate",
    "RelativePath": "api/Project/get_all_project_out_date",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "getImage",
    "RelativePath": "api/Project/get_image",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "project_id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.DTOs.ImageDto.ImageDtos",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetProject",
    "RelativePath": "api/Project/get_project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Project.GetProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.Project",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetProjectByID",
    "RelativePath": "api/Project/get_project_by_id",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Project.GetProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.Project",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "GetOverView",
    "RelativePath": "api/Project/overview",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.DTOs.OverViewDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.ProjectController",
    "Method": "UpdateStatus",
    "RelativePath": "api/Project/update_status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Project.updateStatusRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.SponsorController",
    "Method": "DeleteSponsor",
    "RelativePath": "api/Sponsor",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.SponsorController",
    "Method": "UpdateSponsor",
    "RelativePath": "api/Sponsor",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "up",
        "Type": "WebApplication3.DTOs.Sponsor.UpdateRequestSponsorDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.SponsorController",
    "Method": "GetSponsor",
    "RelativePath": "api/Sponsor/{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApplication3.Entities.sponsor",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.SponsorController",
    "Method": "AddSponsor",
    "RelativePath": "api/Sponsor/add_sponsor",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "create",
        "Type": "WebApplication3.DTOs.Sponsor.CreateRequestSponsorDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication3.Controllers.SponsorController",
    "Method": "GetAllSponsor",
    "RelativePath": "api/Sponsor/get_all_sponsor",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication3.DTOs.Sponsor.GetAllSponsorRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[WebApplication3.Entities.sponsor, WebApplication3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication3.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[WebApplication3.WeatherForecast, WebApplication3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]